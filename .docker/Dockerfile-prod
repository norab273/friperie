#######################################
# Build front (reactJS)               #
#######################################
FROM node:16 as front

WORKDIR /var/www/front

COPY front/ /var/www/front
RUN yarn install

RUN mkdir node_modules/.cache && chmod -R 777 node_modules/.cache

RUN CI=false yarn run build


#######################################
# Build php image                     #
#######################################
FROM php:8.0-fpm-alpine as php
RUN mkdir -p /var/www/html

WORKDIR /var/www/html

RUN apk add --update \
    build-base \
    autoconf \
    rabbitmq-c-dev \
    make \
    curl \
    nodejs \
    yarn \
    zip \
    libzip-dev \
    coreutils \
    icu-dev \
    libpng-dev \
    libjpeg-turbo-dev \
    libwebp-dev

RUN docker-php-ext-configure zip
RUN docker-php-ext-configure gd --enable-gd --with-jpeg --with-webp
RUN docker-php-ext-install zip mysqli pdo pdo_mysql intl gd

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \
    ln -s $(composer config --global home) /root/composer
ENV PATH=$PATH:/root/composer/vendor/bin COMPOSER_ALLOW_SUPERUSER=1

ADD .docker/php/php.ini /usr/local/etc/php/

COPY --chown=www-data:www-data . /var/www/html

RUN composer install --no-progress --optimize-autoloader --classmap-authoritative
RUN yarn install && yarn encore production
COPY entrypoint.sh /
RUN chmod +x /var/www/html/entrypoint.sh

EXPOSE 9000

CMD ["/var/www/html/entrypoint.sh", "php-fpm", "-F"]


#######################################
# Build nginx image production        #
#######################################
FROM nginx as nginx
COPY .docker/nginx/web-prod.conf /etc/nginx/conf.d/default.conf
COPY . /var/www/html
COPY --from=front --chown=nginx:nginx  /var/www/front/ /var/www/html/front
COPY --from=php   --chown=nginx:nginx  /var/www/html/public/bundles /var/www/html/public/bundles
RUN chown -R nginx:nginx /var/www/html/public